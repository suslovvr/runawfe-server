# RunaWFE version (synchronized with maven build)
version = ${project.version}
build.date = ${project.build.date}

default.administrator.name = Administrator
default.administrator.password = wf
default.administrators.group.name = Administrators
default.bots.group.name = Bots

#strong.passwords.regexp = ^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(^[a-zA-Z0-9@\$=!:.#%]+$)
strong.passwords.regexp=

scriptingServiceAPI.executeGroovyScript.enabled = false
undefined.variables.allowed = false
strong.variables.format.enabled = true
variables.autocast.enabled = true

escalation.enabled=true
escalation.default.hierarchy.loader=ru.runa.wfe.extension.orgfunction.TestOrgFunction

task.default.deadline=2 hours
task.almostDeadlinePercents=90
task.assignment.strict.rules.enabled = true

token.maximum.depth = 100
file.variable.local.storage.enabled = true
file.variable.local.storage.enableforfilesgreaterthan = 100000

# used in date and time formats through the system; time format is always HH:mm or HH:mm:ss
date.format.pattern=dd.MM.yyyy

# used to prevent cyclic fork execution
# token.maximum.depth=100

# Whether method ru.runa.wfe.service.impl.ExecutionServiceBean.updateVariables(User, Long, Map<String, Object>) enabled
executionServiceAPI.updateVariables.enabled = false

# Expired jobs check interval
timertask.period.millis.job.execution = 5000
# Unassigned tasks check interval
timertask.period.millis.unassigned.tasks.execution = 60000
# Remove temporary group interval
timertask.period.millis.remove.temp.groups = 10800000
timertask.period.millis.expired.signals.execution = 3600000
# Move processes to archived-tables interval (10800000 = 3 hours, 30000 = 30 seconds)
#timertask.period.millis.archive.processes = 30000
timertask.period.millis.archive.processes = 10800000

# whether to enable ru.runa.wfe.service.AuthenticationService.authenticateByTrustedPrincipal(User, String)
trusted.authentication.enabled = false

# configure email notification about errors: use ${processError} for process errors and ${botTaskIdentifier} for bot configuration errors
# error.email.notification.configuration = email.error.notification.xml

# transaction async execution on nodes
# Use new transaction for node execution by default for specified node type
# process.execution.node.async.NodeType = true, for example process.execution.node.async.TASK_STATE = false
process.execution.node.async.default = true
process.execution.node.async.TASK_STATE = false
process.execution.node.async.WAIT_STATE = false
process.execution.node.async.RECEIVE_MESSAGE = false

# Block process execution (tasks and jobs completion) for suspended processes
# process.suspension.block.process.execution = true
# Allow process suspension (in API and web interface)
# process.suspension.enabled = true

process.swimlane.auto.initialization.enabled = false

required.validator.names = required

definition.comments.collisions.allowed = false
definition.comments.empty.allowed = true

variables.invalid.default.values.allowed = false
variables.invalid.default.values.allowed.before = 01.01.1970
